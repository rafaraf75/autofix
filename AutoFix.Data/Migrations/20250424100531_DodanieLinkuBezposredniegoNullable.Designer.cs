// <auto-generated />
using System;
using AutoFix.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoFix.Data.Migrations
{
    [DbContext(typeof(AutoFixContext))]
    [Migration("20250424100531_DodanieLinkuBezposredniegoNullable")]
    partial class DodanieLinkuBezposredniegoNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutoFix.Data.Data.CMS.Aktualnosc", b =>
                {
                    b.Property<int>("IdAktualnosci")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAktualnosci"));

                    b.Property<string>("LinkTytul")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Pozycja")
                        .HasColumnType("int");

                    b.Property<string>("Tresc")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdAktualnosci");

                    b.ToTable("Aktualnosci");
                });

            modelBuilder.Entity("AutoFix.Data.Data.CMS.Promocja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ikona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tresc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Promocje");
                });

            modelBuilder.Entity("AutoFix.Data.Data.CMS.Strona", b =>
                {
                    b.Property<int>("IdStrony")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStrony"));

                    b.Property<string>("LinkBezposredni")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LinkTytul")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Pozycja")
                        .HasColumnType("int");

                    b.Property<string>("Tresc")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdStrony");

                    b.ToTable("Strony");
                });

            modelBuilder.Entity("AutoFix.Data.Data.CMS.Usluga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ikona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Uslugi");
                });

            modelBuilder.Entity("AutoFix.Data.Data.Garaz.AutoZastepcze", b =>
                {
                    b.Property<int>("IdAutoZastepczego")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAutoZastepczego"));

                    b.Property<DateTime?>("DataDo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataOd")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdNaprawy")
                        .HasColumnType("int");

                    b.Property<decimal>("Koszt")
                        .HasColumnType("money");

                    b.HasKey("IdAutoZastepczego");

                    b.HasIndex("IdNaprawy");

                    b.ToTable("AutaZastepcze");
                });

            modelBuilder.Entity("AutoFix.Data.Data.Garaz.HistoriaNaprawy", b =>
                {
                    b.Property<int>("IdHistorii")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorii"));

                    b.Property<DateTime>("DataZmiany")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdNaprawy")
                        .HasColumnType("int");

                    b.Property<string>("OpisZmiany")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("IdHistorii");

                    b.HasIndex("IdNaprawy");

                    b.ToTable("HistorieNapraw");
                });

            modelBuilder.Entity("AutoFix.Data.Data.Garaz.Klient", b =>
                {
                    b.Property<int>("IdKlienta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdKlienta"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdKlienta");

                    b.ToTable("Klienci");
                });

            modelBuilder.Entity("AutoFix.Data.Data.Garaz.Mechanik", b =>
                {
                    b.Property<int>("IdMechanika")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMechanika"));

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Specjalizacja")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdMechanika");

                    b.ToTable("Mechanicy");
                });

            modelBuilder.Entity("AutoFix.Data.Data.Garaz.Naprawa", b =>
                {
                    b.Property<int>("IdNaprawy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNaprawy"));

                    b.Property<bool>("AutoZastepcze")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataPrzyjecia")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdMechanika")
                        .HasColumnType("int");

                    b.Property<int>("IdPojazdu")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNaprawy");

                    b.HasIndex("IdMechanika");

                    b.HasIndex("IdPojazdu");

                    b.ToTable("Naprawy");
                });

            modelBuilder.Entity("AutoFix.Data.Data.Garaz.Pojazd", b =>
                {
                    b.Property<int>("IdPojazdu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPojazdu"));

                    b.Property<int>("IdKlienta")
                        .HasColumnType("int");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NrRejestracyjny")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Rok")
                        .HasColumnType("int");

                    b.Property<string>("Silnik")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPojazdu");

                    b.HasIndex("IdKlienta");

                    b.ToTable("Pojazdy");
                });

            modelBuilder.Entity("AutoFix.Data.Data.Garaz.Rezerwacja", b =>
                {
                    b.Property<int>("IdRezerwacji")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRezerwacji"));

                    b.Property<DateTime>("DataRezerwacji")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdKlienta")
                        .HasColumnType("int");

                    b.Property<int?>("IdMechanika")
                        .HasColumnType("int");

                    b.Property<int>("IdPojazdu")
                        .HasColumnType("int");

                    b.Property<string>("Usluga")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Uwagi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRezerwacji");

                    b.HasIndex("IdKlienta");

                    b.HasIndex("IdMechanika");

                    b.HasIndex("IdPojazdu");

                    b.ToTable("Rezerwacje");
                });

            modelBuilder.Entity("AutoFix.Data.Data.Garaz.AutoZastepcze", b =>
                {
                    b.HasOne("AutoFix.Data.Data.Garaz.Naprawa", "Naprawa")
                        .WithMany()
                        .HasForeignKey("IdNaprawy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Naprawa");
                });

            modelBuilder.Entity("AutoFix.Data.Data.Garaz.HistoriaNaprawy", b =>
                {
                    b.HasOne("AutoFix.Data.Data.Garaz.Naprawa", "Naprawa")
                        .WithMany("Historie")
                        .HasForeignKey("IdNaprawy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Naprawa");
                });

            modelBuilder.Entity("AutoFix.Data.Data.Garaz.Naprawa", b =>
                {
                    b.HasOne("AutoFix.Data.Data.Garaz.Mechanik", "Mechanik")
                        .WithMany("Naprawy")
                        .HasForeignKey("IdMechanika");

                    b.HasOne("AutoFix.Data.Data.Garaz.Pojazd", "Pojazd")
                        .WithMany("Naprawy")
                        .HasForeignKey("IdPojazdu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mechanik");

                    b.Navigation("Pojazd");
                });

            modelBuilder.Entity("AutoFix.Data.Data.Garaz.Pojazd", b =>
                {
                    b.HasOne("AutoFix.Data.Data.Garaz.Klient", "Klient")
                        .WithMany("Pojazdy")
                        .HasForeignKey("IdKlienta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klient");
                });

            modelBuilder.Entity("AutoFix.Data.Data.Garaz.Rezerwacja", b =>
                {
                    b.HasOne("AutoFix.Data.Data.Garaz.Klient", "Klient")
                        .WithMany()
                        .HasForeignKey("IdKlienta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutoFix.Data.Data.Garaz.Mechanik", "Mechanik")
                        .WithMany()
                        .HasForeignKey("IdMechanika")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AutoFix.Data.Data.Garaz.Pojazd", "Pojazd")
                        .WithMany()
                        .HasForeignKey("IdPojazdu")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Klient");

                    b.Navigation("Mechanik");

                    b.Navigation("Pojazd");
                });

            modelBuilder.Entity("AutoFix.Data.Data.Garaz.Klient", b =>
                {
                    b.Navigation("Pojazdy");
                });

            modelBuilder.Entity("AutoFix.Data.Data.Garaz.Mechanik", b =>
                {
                    b.Navigation("Naprawy");
                });

            modelBuilder.Entity("AutoFix.Data.Data.Garaz.Naprawa", b =>
                {
                    b.Navigation("Historie");
                });

            modelBuilder.Entity("AutoFix.Data.Data.Garaz.Pojazd", b =>
                {
                    b.Navigation("Naprawy");
                });
#pragma warning restore 612, 618
        }
    }
}
